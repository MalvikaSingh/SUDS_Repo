rm(list=ls())
graphics.off()
A<-10
A1<-c(10,11,12,seq(0,10,by=1))
A1
library()
seq(from=1,to = 10,length.out = 11)
?seq
rm(list=ls())
graphics.off()
swirl()
library(swirl)
ls()
rm(list = ls())
swirl()
x <- c(44,NA,5,NA)
x <- x*3
x*3
x <- rnorm(1000)
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- (my_data).is.na()
my_na <- (my_data)is.na()
my_na <- my_data.is.na()
my_na <- is.na((my_data))
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[x>0 & !is.na(x)]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector[1:20]
my_vector <- x[1:20]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?`matrix-class`
?matrix-class
?matrix
my_matrix2 <- matrix(my_matrix)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
my_data
my_data = c("patient","age","weight","bp","rating","test")
c("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data) <- cnames
colnames(my_data) <- cnames
info()
skip()
swirl()
colnames(my_data) <- c("patient", "age", "weight", "bp")
colnames(my_data) <- c("patient", "age", "weight", "bp")
nxt()
sapply(race,class)
swirl()
library(swirl)
rm(list = ls())
swirl()
colnames(my_data)
my_data
colnames(my_data) <- cnames
q <- data.frame(100,200,200,200,200,200)
my_data <- data.frame(100,200,200,200,200,200)
my_data
my_data[1,]
my_data[,1]
my_data[,c(2)]
q <- data.frame(100,200,200,200,200,200)
colnames(q) <- colnames(my_data)
colnames(my_data) <- cnames
swirl()
rm(list=ls())
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(my_matrix,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
quit()
race <- read.csv("RaceSummary2010.csv")
shiny::runApp('C:/Users/Malvika's Dell XPS13/Desktop/Semester 1 Fall 2018/SUDS/meet 4/formtest')
shiny::runApp('C:/Users/Malvika's Dell XPS13/Desktop/Semester 1 Fall 2018/SUDS/meet 4/formtest')
shiny::runApp('C:/Users/Public/formtest')
runApp('C:/Users/Public/formtest')
runApp('C:/Users/Public/formtest')
shiny::runApp()
runApp()
runApp()
runApp()
install.packages("shinyjs")
runApp()
install.packages("digest")
install.packages("digest")
install.packages("shiny")
install.packages("shiny")
devtools::install_github('rstudio/DT')
shiny::runApp()
runApp()
runApp()
shinyjs::inlineCSS(appCSS)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("DT")
install.packages("DT")
shiny::runApp()
runApp()
?DT
remotes::install_github('rstudio/DT')
DT::install_github('rstudio/DT')
devtools::install_github('rstudio/DT')
install.packages("devtools")
devtools::install_github('rstudio/DT')
